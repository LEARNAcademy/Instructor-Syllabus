{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelstanislaw/Desktop/using-state/src/App.js\";\nimport React, { Component } from 'react';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      let {\n        emotionsArray\n      } = this.state;\n      let randomEmotion = Math.floor(Math.random() * emotionsArray.length);\n      this.setState({\n        currentEmotion: newCount\n      });\n    };\n\n    this.state = {\n      emotionsArray: [\"ðŸ˜ˆ\", \"ðŸ˜‚\", \"ðŸ¤ª\", \"ðŸ˜–\", \"ðŸ¥³\", \"ðŸ¥¶\", \"ðŸ¤¬\", \"ðŸ¤¯\", \"ðŸ˜‘\", \"ðŸ¥º\", \"ðŸ¥±\", \"ðŸ¥°\", \"ðŸ¥´\", \"ðŸ¤¢\"],\n      currentEmotion: \"\"\n    };\n  }\n\n  render() {\n    let {\n      count\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Hi\"), count, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Add by 1\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachaelstanislaw/Desktop/using-state/src/App.js"],"names":["React","Component","App","constructor","props","handleChange","emotionsArray","state","randomEmotion","Math","floor","random","length","setState","currentEmotion","newCount","render","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJ,MAAM;AACnB,UAAI;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA7B;AACA,UAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,aAAa,CAACM,MAAzC,CAApB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEC;AAAlB,OAAd;AACD,KAZkB;;AAEf,SAAKR,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,CADJ;AAEXQ,MAAAA,cAAc,EAAE;AAFL,KAAb;AAIH;;AAQDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAArB;AACA,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIU,KAFJ,eAGE;AAAQ,MAAA,OAAO,EAAG,KAAKZ,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AASD;;AA1BwC","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        emotionsArray: [\"ðŸ˜ˆ\", \"ðŸ˜‚\", \"ðŸ¤ª\", \"ðŸ˜–\", \"ðŸ¥³\", \"ðŸ¥¶\", \"ðŸ¤¬\", \"ðŸ¤¯\", \"ðŸ˜‘\", \"ðŸ¥º\", \"ðŸ¥±\", \"ðŸ¥°\", \"ðŸ¥´\", \"ðŸ¤¢\"],\n        currentEmotion: \"\"\n    }\n  }\n\n  handleChange = () => {\n    let { emotionsArray } = this.state\n    let randomEmotion = Math.floor(Math.random() * emotionsArray.length)\n    this.setState({ currentEmotion: newCount })\n  }\n\n  render() {\n    let { count } = this.state\n    return(\n      <>\n        <h1>Hi</h1>\n        { count }\n        <button onClick={ this.handleChange }>\n          Add by 1\n        </button>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}