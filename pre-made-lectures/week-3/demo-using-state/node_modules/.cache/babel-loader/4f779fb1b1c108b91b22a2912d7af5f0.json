{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelstanislaw/Desktop/using-state/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      let {\n        emotionsArray,\n        currentEmotion\n      } = this.state;\n      let randomEmotion = emotionsArray[Math.floor(Math.random() * emotionsArray.length)];\n      this.setState({\n        currentEmotion: randomEmotion\n      });\n    };\n\n    this.addSelection = () => {\n      let {\n        currentEmotion,\n        selectedEmotions\n      } = this.state;\n\n      if (currentEmotion !== \"‚ùì\") {\n        selectedEmotions.push(currentEmotion);\n        this.setState({\n          selectedEmotions: selectedEmotions\n        });\n      }\n    };\n\n    this.state = {\n      emotionsArray: [\"üòà\", \"üòÇ\", \"ü§™\", \"üòñ\", \"ü•≥\", \"ü•∂\", \"ü§¨\", \"ü§Ø\", \"üòë\", \"ü•∫\", \"ü•±\", \"ü•∞\", \"ü•¥\", \"ü§¢\"],\n      currentEmotion: \"‚ùì\",\n      selectedEmotions: []\n    };\n  }\n\n  render() {\n    let {\n      currentEmotion,\n      selectedEmotions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Mood Meter\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"How do you feel?\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"emotion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, currentEmotion), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chooseButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Select\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"selection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, selectedEmotions)));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachaelstanislaw/Desktop/using-state/src/App.js"],"names":["React","Component","App","constructor","props","handleChange","emotionsArray","currentEmotion","state","randomEmotion","Math","floor","random","length","setState","addSelection","selectedEmotions","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASJ,MAAM;AACnB,UAAI;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAAoC,KAAKC,KAA7C;AACA,UAAIC,aAAa,GAAGH,aAAa,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,aAAa,CAACO,MAAzC,CAAD,CAAjC;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,cAAc,EAAEE;AAAlB,OAAd;AACD,KAbkB;;AAAA,SAenBM,YAfmB,GAeJ,MAAM;AACnB,UAAI;AAAER,QAAAA,cAAF;AAAkBS,QAAAA;AAAlB,UAAuC,KAAKR,KAAhD;;AACA,UAAGD,cAAc,KAAK,GAAtB,EAA2B;AACzBS,QAAAA,gBAAgB,CAACC,IAAjB,CAAsBV,cAAtB;AACA,aAAKO,QAAL,CAAc;AAAEE,UAAAA,gBAAgB,EAAEA;AAApB,SAAd;AACD;AACF,KArBkB;;AAEf,SAAKR,KAAL,GAAa;AACXF,MAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,CADJ;AAEXC,MAAAA,cAAc,EAAE,GAFL;AAGXS,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKH;;AAgBDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEX,MAAAA,cAAF;AAAkBS,MAAAA;AAAlB,QAAuC,KAAKR,KAAhD;AACA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,MAAA,OAAO,EAAG,KAAKH,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAKE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIE,cADJ,CALF,eAQE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAG,KAAKQ,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARF,eAaE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,gBADJ,CAbF,CADF,CADF;AAqBD;;AA/CwC","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        emotionsArray: [\"üòà\", \"üòÇ\", \"ü§™\", \"üòñ\", \"ü•≥\", \"ü•∂\", \"ü§¨\", \"ü§Ø\", \"üòë\", \"ü•∫\", \"ü•±\", \"ü•∞\", \"ü•¥\", \"ü§¢\"],\n        currentEmotion: \"‚ùì\",\n        selectedEmotions: []\n    }\n  }\n\n  handleChange = () => {\n    let { emotionsArray, currentEmotion } = this.state\n    let randomEmotion = emotionsArray[Math.floor(Math.random() * emotionsArray.length)]\n    this.setState({ currentEmotion: randomEmotion })\n  }\n\n  addSelection = () => {\n    let { currentEmotion, selectedEmotions } = this.state\n    if(currentEmotion !== \"‚ùì\") {\n      selectedEmotions.push(currentEmotion)\n      this.setState({ selectedEmotions: selectedEmotions })\n    }\n  }\n\n  render() {\n    let { currentEmotion, selectedEmotions } = this.state\n    return(\n      <>\n        <div className = \"body\">\n          <h1>Mood Meter</h1>\n          <button onClick={ this.handleChange }>\n          How do you feel?\n          </button>\n          <div id=\"emotion\">\n            { currentEmotion }\n          </div>\n          <div id=\"chooseButton\">\n            <button onClick={ this.addSelection }>\n              Select\n            </button>\n          </div>\n          <div id=\"selection\">\n            { selectedEmotions }\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}