{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelstanislaw/Desktop/using-state/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      let {\n        emotionsArray,\n        selectedEmotions,\n        currentEmotion\n      } = this.state;\n      let randomEmotion = emotionsArray[Math.floor(Math.random() * emotionsArray.length)];\n      this.setState({\n        currentEmotion: randomEmotion\n      });\n      let selectedArray = selectedEmotions.push(currentEmotion);\n      this.setState({\n        selectedEmotions: selectedArray\n      });\n    };\n\n    this.state = {\n      emotionsArray: [\"😈\", \"😂\", \"🤪\", \"😖\", \"🥳\", \"🥶\", \"🤬\", \"🤯\", \"😑\", \"🥺\", \"🥱\", \"🥰\", \"🥴\", \"🤢\"],\n      currentEmotion: \"❓\",\n      selectedEmotions: []\n    };\n  }\n\n  render() {\n    let {\n      currentEmotion\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Mood Meter\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"How do you feel?\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"emotion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, currentEmotion));\n  }\n\n}","map":{"version":3,"sources":["/Users/rachaelstanislaw/Desktop/using-state/src/App.js"],"names":["React","Component","App","constructor","props","handleChange","emotionsArray","selectedEmotions","currentEmotion","state","randomEmotion","Math","floor","random","length","setState","selectedArray","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASJ,MAAM;AACnB,UAAI;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,gBAAjB;AAAmCC,QAAAA;AAAnC,UAAsD,KAAKC,KAA/D;AACA,UAAIC,aAAa,GAAGJ,aAAa,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,aAAa,CAACQ,MAAzC,CAAD,CAAjC;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,cAAc,EAAEE;AAAlB,OAAd;AACA,UAAIM,aAAa,GAAGT,gBAAgB,CAACU,IAAjB,CAAsBT,cAAtB,CAApB;AACA,WAAKO,QAAL,CAAc;AAAER,QAAAA,gBAAgB,EAAES;AAApB,OAAd;AACD,KAfkB;;AAEf,SAAKP,KAAL,GAAa;AACXH,MAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,CADJ;AAEXE,MAAAA,cAAc,EAAE,GAFL;AAGXD,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKH;;AAUDW,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEV,MAAAA;AAAF,QAAoB,KAAKC,KAA7B;AACA,wBACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,MAAA,OAAO,EAAG,KAAKJ,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAKE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,cADJ,CALF,CADF;AAWD;;AA/BwC","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        emotionsArray: [\"😈\", \"😂\", \"🤪\", \"😖\", \"🥳\", \"🥶\", \"🤬\", \"🤯\", \"😑\", \"🥺\", \"🥱\", \"🥰\", \"🥴\", \"🤢\"],\n        currentEmotion: \"❓\",\n        selectedEmotions: []\n    }\n  }\n\n  handleChange = () => {\n    let { emotionsArray, selectedEmotions, currentEmotion } = this.state\n    let randomEmotion = emotionsArray[Math.floor(Math.random() * emotionsArray.length)]\n    this.setState({ currentEmotion: randomEmotion })\n    let selectedArray = selectedEmotions.push(currentEmotion)\n    this.setState({ selectedEmotions: selectedArray })\n  }\n\n  render() {\n    let { currentEmotion} = this.state\n    return(\n      <div className = \"body\">\n        <h1>Mood Meter</h1>\n        <button onClick={ this.handleChange }>\n        How do you feel?\n        </button>\n        <div id=\"emotion\">\n          { currentEmotion }\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}